import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '../components/Button';\nimport { Input } from '../components/Input';\nimport { Card } from '../components/Card';\n\ninterface FormData {\n  email: string;\n  password: string;\n}\n\ninterface FormErrors {\n  email?: string;\n  password?: string;\n}\n\nconst SignIn: React.FC = () => {\n  const [formData, setFormData] = useState<FormData>({\n    email: '',\n    password: '',\n  });\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const validateForm = (): boolean => {\n    const newErrors: FormErrors = {};\n\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email';\n    }\n\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    // Simulate API call\n    setTimeout(() => {\n      console.log('Sign in with:', formData);\n      setIsLoading(false);\n      // In a real app, handle authentication here\n    }, 1000);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n    // Clear error for this field when user starts typing\n    if (errors[name as keyof FormErrors]) {\n      setErrors((prev) => ({ ...prev, [name]: undefined }));\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-white via-gray-50 to-white flex items-center justify-center px-4 py-12\">\n      {/* Background decoration */}\n      <div className=\"fixed inset-0 -z-10 overflow-hidden pointer-events-none\">\n        <div className=\"absolute top-0 right-0 -translate-y-12 translate-x-12 w-96 h-96 bg-accent-100 rounded-full blur-3xl opacity-20\" />\n        <div className=\"absolute bottom-0 left-0 translate-y-12 -translate-x-12 w-96 h-96 bg-accent-100 rounded-full blur-3xl opacity-20\" />\n      </div>\n\n      <div className=\"w-full max-w-md\">\n        {/* Logo/Header */}\n        <div className=\"text-center mb-8\">\n          <h2 className=\"text-4xl font-700 text-black mb-2\">Welcome back</h2>\n          <p className=\"text-base font-400 text-gray-600\">\n            Sign in to your YUTHUB account\n          </p>\n        </div>\n\n        {/* Form Card */}\n        <Card padded=\"lg\" hoverable={false} className=\"shadow-lg\">\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {/* Email */}\n            <Input\n              label=\"Email address\"\n              type=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleInputChange}\n              placeholder=\"name@organization.com\"\n              error={errors.email}\n              required\n            />\n\n            {/* Password */}\n            <div className=\"relative\">\n              <Input\n                label=\"Password\"\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                value={formData.password}\n                onChange={handleInputChange}\n                placeholder=\"••••••••\"\n                error={errors.password}\n                required\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className=\"absolute right-4 top-[2.6rem] text-gray-400 hover:text-gray-600 transition-colors\"\n                aria-label={showPassword ? 'Hide password' : 'Show password'}\n              >\n                {showPassword ? (\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-4.803m5.596-3.856a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0M15 12a3 3 0 11-6 0 3 3 0 016 0zm6 0c0 1.657-.672 3.157-1.757 4.243A6 6 0 0121 12a6 6 0 00-9.487-5.623\" />\n                  </svg>\n                ) : (\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                  </svg>\n                )}\n              </button>\n            </div>\n\n            {/* Forgot Password Link */}\n            <div className=\"flex justify-end\">\n              <Link\n                to=\"/forgot-password\"\n                className=\"text-sm font-500 text-accent-600 hover:text-accent-700 transition-colors\"\n              >\n                Forgot password?\n              </Link>\n            </div>\n\n            {/* Submit Button */}\n            <Button\n              variant=\"primary\"\n              size=\"lg\"\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"w-full\"\n            >\n              {isLoading ? 'Signing in...' : 'Sign in'}\n            </Button>\n\n            {/* Divider */}\n            <div className=\"relative py-4\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-200\"></div>\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-2 bg-white text-gray-500 font-400\">or</span>\n              </div>\n            </div>\n\n            {/* OAuth Options */}\n            <div className=\"grid grid-cols-2 gap-3\">\n              <Button\n                variant=\"secondary\"\n                size=\"md\"\n                type=\"button\"\n                className=\"w-full\"\n              >\n                <svg className=\"w-4 h-4 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"M15.545 6.558a9.42 9.42 0 01.139 1.626c0 2.889-2.126 5.413-5.044 6.32.711-.165 1.39-.49 2.04-.987l-.12-.08c-2.938 0-5.385-1.897-6.362-4.115.674.372 1.42.595 2.205.595.394 0 .781-.05 1.15-.15-.988-1.645-1.545-3.56-1.545-5.59v-.2c.614.326 1.323.547 2.05.636-.526-.335-1.263-.987-1.263-2.041 0-.878.298-1.754.823-2.447l.003-.002.002-.003a9.302 9.302 0 016.767 3.276c.552-.4 1.234-.645 1.962-.678-.02.88.231 1.7.823 2.447-.526.734-1.363 1.208-2.282 1.208.04.537.165 1.074.477 1.53l.003.002c.16.325.37.645.646.945l.005.007c.76.909 1.666 1.61 2.775 1.884l.007.002c.296.074.99.147 1.522.147.103 0 .209-.009.313-.024l-.17-.482c-.133.022-.27.033-.41.033z\" />\n                </svg>\n                Google\n              </Button>\n              <Button\n                variant=\"secondary\"\n                size=\"md\"\n                type=\"button\"\n                className=\"w-full\"\n              >\n                <svg className=\"w-4 h-4 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"M10 0C4.477 0 0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.879V12.89h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.989C16.343 19.129 20 14.99 20 10c0-5.523-4.477-10-10-10z\" />\n                </svg>\n                Facebook\n              </Button>\n            </div>\n          </form>\n\n          {/* Sign Up Link */}\n          <div className=\"mt-6 pt-6 border-t border-gray-200 text-center\">\n            <p className=\"text-sm font-400 text-gray-600\">\n              Don't have an account?{' '}\n              <Link\n                to=\"/signup\"\n                className=\"font-600 text-black hover:text-accent-600 transition-colors\"\n              >\n                Sign up\n              </Link>\n            </p>\n          </div>\n        </Card>\n\n        {/* Help Link */}\n        <div className=\"text-center mt-8\">\n          <p className=\"text-sm font-400 text-gray-500\">\n            Need help?{' '}\n            <a\n              href=\"/contact-support\"\n              className=\"font-500 text-accent-600 hover:text-accent-700 transition-colors\"\n            >\n              Contact support\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;\n